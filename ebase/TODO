* The following nodetype attributes are not related to nodes and
   should be removed:
     - maxrevision
     - canworkspace
  Consequently, the following methods should be moved out of node.pm
   into an appropriate location:
     -canWorkspace
     -updateWorkspaced
     -getWorkspaced

   The following should be moved from Node.pm for the same reason
     -logRevision

   Rationale:  nodes don't know whether the system can handle
   workspacing of itself.  Only the system can know whether it can
   manage multiple revisions of a node.  Hence, this should be moved
   at least into NodeBase.pm, but more properly into a workspace
   object that 'knows' about the intricacies of workspacing.

* Move parse/run code into separate classes under
   Everything/HTML/Something-or-other 

* Allow Gigantic Node Lister to order by Maintainer, createtime etc.

* Amend ecore to ensure XHTML 1.0 compliance

* Amend FromObject.pm so that form objects return labels with a 'for'
   attribute and id in the input tag.

* Change default DB (for all DBs) setup so default encoding is utf8

* Documentation - Ecore should be self documenting

* Documentation - allow POD of Everything::HTML to be accessed from
   Ecore to assist front-end developers

* Write tests for t/TEST to test for:
** login/logout
** cookie setting,
** node editing
** well-formed XHTML.

* Move Perl out of containers into htmlcode nodes to ease frontend
   development

* Explore a templating systems to either replace containers or run as
   another response class - consider Template Toolkit and
   HTML::Seamstress.

* Export nodeballs in utf-8 rather than latin 1

* DB - normalise node table

* Allow nodeballs to be exported through a web browser

* Allow DB.pm and subclasses to set up DB schema as it sees fit.  This
   includes:

   ** removing sql tables from nodeballs
   ** allowing schemae that are optimised for each of the databases

* Allow retrieval of objects other than nodes from the DB e.g. links

   This may involve creating objects that are a superclass of nodes,
   i.e. nodes are an 'object' and links are also 'objects', of making
   links nodes.  In the latter case, nodes will have to be slimmed
   down.

* Port enote and preview

* Implement Captcha

  Get rid of comment spam  
  Probably use Authen::Captcha

* Implement session keys

   Track user sessions deal with comment spam etc