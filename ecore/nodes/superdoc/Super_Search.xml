<NODE export_version="0.5" nodetype="superdoc" title="Super Search">
  <field name="author_user" type="noderef" type_nodetype="user,nodetype">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="doctext" type="literal_value">[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;



my $dbh = $DB-&gt;getDatabaseHandle;

my $str;

my $DEBUG=0;

my $errormsg;

my $debugstr;

my $searchresults;

my %nodetype;



my $hasTextField = sub {

   my ($NT) = @_;

   my $textfield = 0;

   my %tables;

   foreach my $t (@{ $NT-&gt;getTableArray || [] }) {

      push @{ $tables{$t} }, $$NT{node_id};

   }

   foreach my $table (keys %tables) {

      foreach my $FIELDS ($DB-&gt;getFieldsHash($table)) {

         $textfield = 1 if $$FIELDS{Type} =~ /text/;

      }

   }

   $textfield;

};





my $nodetypes = $DB-&gt;getNodeWhere({type_nodetype =&gt; 1}, 'nodetype', 'title');

my @nttitles;

foreach (@$nodetypes) {

    $nodetype{$$_{title}} = $$_{node_id};

    push @nttitles, $$_{title} if $_-&gt;hasTypeAccess($USER, 'r') and &amp;$hasTextField($_);

}

local *makeDateMenu=sub{

    my ($prefix,$defaultdate,$edge)=@_;

    ### XXX: too db specific and we shouldn't be calling SQL from here anyway
    $defaultdate||=$DB-&gt;sqlSelect($DB-&gt;now(),&quot;node&quot;,&quot;&quot;,&quot;limit 1&quot;);

    my ($year,$month,$day)=split(/-/,$defaultdate);

    my @months;

    my @years=(1999..2009);

    my @dates;

    my %labels=(&quot;01&quot;=&gt;&quot;Jan&quot;,&quot;02&quot;=&gt;&quot;Feb&quot;,&quot;03&quot;=&gt;&quot;Mar&quot;,&quot;04&quot;=&gt;&quot;Apr&quot;,&quot;05&quot;=&gt;&quot;May&quot;,&quot;06&quot;=&gt;&quot;Jun&quot;,

            &quot;07&quot;=&gt;&quot;Jul&quot;,&quot;08&quot;=&gt;&quot;Aug&quot;,&quot;09&quot;=&gt;&quot;Sep&quot;,10=&gt;&quot;Oct&quot;,11=&gt;&quot;Nov&quot;,12=&gt;&quot;Dec&quot;);

    for(1..12){

        push @months, (length $_==1)?&quot;0$_&quot;:$_;

    }

    for(1..31){

        push @dates, (length $_==1)?&quot;0$_&quot;:$_;

    }

    $query-&gt;popup_menu(-name=&gt;&quot;$prefix&quot;.&quot;_month&quot;,-values=&gt;\@months,-labels=&gt;\%labels,-default=&gt;$month).

        $query-&gt;popup_menu(-name=&gt;&quot;$prefix&quot;.&quot;_day&quot;,-values=&gt;\@dates,-default=&gt;$day).

        $query-&gt;popup_menu(-name=&gt;&quot;$prefix&quot;.&quot;_year&quot;,-values=&gt;\@years,-default=&gt;$year);

};



local *paramToDate=sub{

    my ($prefix,$edge)=@_;

    my $str=$query-&gt;param($prefix.&quot;_year&quot;).&quot;-&quot;.

        $query-&gt;param($prefix.&quot;_month&quot;).&quot;-&quot;.

        $query-&gt;param($prefix.&quot;_day&quot;);

    $str.= $edge eq &quot;end&quot; ? &quot; 23:59:59&quot; : &quot; 00:00:00&quot;;

    return $str if $str=~/^\d{4}-\d{2}-\d{2} \d\d:\d\d:\d\d$/;

    &quot;0000-00-00 00:00:00&quot;;

};



local *stringToSearchterms=sub{

    my ($text)=@_;

    my @st;

    while($text=~/\&quot;([^&quot;]*)\&quot;/g){

    push @st, $1;

}

$text=~s/\&quot;[^&quot;]*\&quot;//g;

push @st, split(/\s+/,$text);

return @st;

};

$str.= $query-&gt;start_form;

$str.=&quot;&lt;table&gt;&quot;;

$str.=&quot;&lt;tr&gt;&lt;td&gt;Words in title:&lt;/td&gt;&lt;td&gt;&quot;.$query-&gt;textfield('wordsintitle').&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;

$str.=&quot;&lt;tr&gt;&lt;td&gt;Author:&lt;/td&gt;&lt;td&gt;&quot;.$query-&gt;textfield('author').&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;

$str.=&quot;&lt;tr&gt;&lt;td&gt;Words in text:&lt;/td&gt;&lt;td&gt;&quot;.$query-&gt;textfield('wordsintext').&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;

$str.=&quot;&lt;/table&gt;&quot;.

&quot;&lt;p&gt;&quot; . $query-&gt;checkbox(-name=&gt;'constraindates',-label=&gt;&quot;Constrain Dates on search&quot;).&quot;&lt;/p&gt;&lt;p&gt;&quot;.

&quot;Between&quot;.makeDateMenu('start','1999-09-01').&quot; and &quot;.makeDateMenu('end').&quot;&lt;/p&gt;&quot;;

$str .= &quot;&lt;p&gt;Choose types to limit results to:&lt;/p&gt;&quot;.

$query-&gt;checkbox_group(-name=&gt;'chosentypes', -rows=&gt;4,-cols=&gt;3, -values =&gt; \@nttitles) if @nttitles;

$str.='&lt;p&gt;';

$str.=$query-&gt;submit('formsubmit','search');

$str.='&lt;/p&gt;';
$str.=$query-&gt;end_form;



if($query-&gt;param('formsubmit')){



    my $author=$query-&gt;param('author');

    my $AUTHOR;

    $AUTHOR=$DB-&gt;getNode($author,'user') if $author;



    my @where;

    push @where, &quot;author_user=&quot;.$dbh-&gt;quote($AUTHOR-&gt;get_node_id) if $AUTHOR-&gt;get_node_id;

    $errormsg.=&quot;&lt;BR&gt;Couldn't find any author by the name of $author&lt;BR&gt;&quot; if  (!$AUTHOR-&gt;get_node_id and $author);



push @where, &quot;createtime between &quot;.$dbh-&gt;quote(paramToDate('start')).&quot; and &quot;.$dbh-&gt;quote(paramToDate('end','end')) if $query-&gt;param('constraindates');



    my (@wordsintitle)=stringToSearchterms($query-&gt;param('wordsintitle'));

    foreach(@wordsintitle){

        push @where, &quot;title like &quot;.$dbh-&gt;quote(&quot;\%$_\%&quot;);

    }



    my $wordsintext=0;

    my(@wordsintext)=stringToSearchterms($query-&gt;param('wordsintext'));







    my @types;

    if($query-&gt;param('constraintypes') or $query-&gt;param('chosentypes')){

        foreach my $blah($query-&gt;param('chosentypes')){

            push @types, $nodetype{$blah};

        }

    } else {

        push @types, values %nodetype;

    }







    my $RESULTS;

    if (not @wordsintext) {



        $RESULTS=searchNodeName(join(' ',@wordsintitle), \@types);

    } else {



        my %tables;

        foreach (@types) {

            my $NT = $DB-&gt;getNode( $_ );



            foreach my $t (@{ $NT-&gt;getTableArray }) {

                $debugstr.=&quot;$t&lt;br&gt;\n&quot;;

                push @{ $tables{$t} }, $$NT{node_id};

            }

        }



        foreach my $table (keys %tables) {

            my @tablewhere;

            my $typestr=&quot;type_nodetype in (&quot;;

            $typestr.=join ',', @{ $tables{$table}};

            $typestr.=&quot;)&quot;;



            push @tablewhere, $typestr;

            my @textfields;

            foreach my $FIELDS ($DB-&gt;getFieldsHash($table)) {

                push @textfields, $$FIELDS{Field} if $$FIELDS{Type} =~ /text/;

            }

# we could potentially have multiple text fields, but not for now

            next unless @textfields;

            my $field = shift @textfields;

            foreach my $word (@wordsintext){

                push @tablewhere, &quot;$field like &quot;.$dbh-&gt;quote(&quot;\%$word\%&quot;);

            }

            push @tablewhere, &quot;node_id=$table\_id&quot;;

          my $wherestr = join(&quot; and &quot;, (@where, @tablewhere));

            $debugstr .= &quot;$wherestr&lt;br&gt;&quot;;

            my $csr;

            $csr=$DB-&gt;sqlSelectMany(&quot;node_id&quot;,&quot;node,$table&quot;,$wherestr,&quot;limit 100&quot;);



            while (my $N = $csr-&gt;fetchrow_hashref) {

                push @$RESULTS, $DB-&gt;getNodeById($$N{node_id});

            }

            $csr-&gt;finish;

        }



    }



    foreach my $N (@$RESULTS) {

          next unless $N-&gt;hasAccess($USER, 'r');

          $searchresults.=&quot;&lt;li&gt;&quot;.$this-&gt;link_node($N).&quot;&lt;/li&gt;\n&quot;;

          #this could potentially link to a node which the user doesn't have R access to

    }



    $searchresults=&quot;&lt;p&gt;&lt;b&gt;Search Results:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;$searchresults&lt;/p&gt;&quot; if $searchresults;

    $str=$errormsg.$searchresults.&quot;\n&lt;hr /&gt;&lt;p&gt;$str&lt;/p&gt;&quot;;

    $str.=&quot;&lt;p&gt;$debugstr&lt;/p&gt;&quot; if $DEBUG;



}



$str;


%]</field>
  <field name="dynamicauthor_permission" type="literal_value">-1</field>
  <field name="dynamicgroup_permission" type="literal_value">-1</field>
  <field name="dynamicguest_permission" type="literal_value">-1</field>
  <field name="dynamicother_permission" type="literal_value">-1</field>
  <field name="group_usergroup" type="literal_value">-1</field>
  <field name="groupaccess" type="literal_value">iiiii</field>
  <field name="guestaccess" type="literal_value">iiiii</field>
  <field name="loc_location" type="noderef" type_nodetype="location,nodetype">superdoc</field>
  <field name="otheraccess" type="literal_value">iiiii</field>
  <field name="title" type="literal_value">Super Search</field>
  <field name="type_nodetype" type="noderef" type_nodetype="nodetype,nodetype">superdoc</field>
</NODE>
