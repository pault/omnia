<NODE export_version="0.5" nodetype="superdoc" title="Create a new user">
  <field type_nodetype="user,nodetype" name="author_user" type="noderef">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="doctext" type="literal_value">[%
my $str;

local *generateLogin = sub {
 $query->start_form
    .'&lt;INPUT TYPE="hidden" NAME="op" VALUE="newuser">'
    .$query->hidden('node_id', getId($NODE))
    .'Preferred User Name:
      &lt;INPUT TYPE="text" NAME="nu_name" VALUE="" MAXLENGTH="22">&lt;br>
      Real&amp;#153; Name:'
    .$query->textfield("nu_realname", "", 30)
    .'&lt;br>Email Address:'
    .$query->textfield("nu_email", "", 20)
    .'&lt;br>'
    .$query->submit("sexisgood", "submit")
    .$query->end_form;
 };



if ($$USER{title} ne "Guest User") {
 # return "You already &lt;i>are&lt;/i> a user -- you don't need an alter-ego...";
}



unless ($query->param("op") eq "newuser") {
  $str.="
To create a new user on Everything, we need a smattering of information:
&lt;p>";  


$str .=generateLogin();

 $str .= '
&lt;p>
&lt;i>&lt;b>Please note:&lt;/b>
We are not going to send you junk email "member updates", sell your
address to spammers, or display your email address for people to see.  
This email exists so that you can recieve your password, and/or retrieve
it if you forget.  There may be future email functionality, which
you will have the option to turn on from your user settings page.  
&lt;/i>

&lt;p>Forgot your username or password? Click [What is my password|HERE].';
return $str;
}

my $realname = $query->param("nu_realname");
my $email = $query->param("nu_email");
my $name = $query->param("nu_name");

my $NEWUSER = getNode($name, "user", "create");

#generate the passwd and send it out on email.
my @chars = ( "A" .. "Z", "a" .. "z", 0 .. 9);
my $passwd = join("", @chars[ map { rand @chars } ( 1 .. 8 ) ]);

if($NEWUSER->getId() == -1)
{
#check if we have any '_' vs ' ' clashing that could lead to chatterbox conflicts
my $match=lc($name);
$match=~s/([a-zA-Z])/'['.$1.uc($1).']'/eg;
$match=~s/[_ ]/[_ ]/g;
$match="^$match\$";
my ($closeuser)=$DB->sqlSelect("node_id,title","node","title regexp \"$match\" and type_nodetype=".getId(getType('user')));
if($closeuser){
   return "Sorry, your username clashes with ".linkNode($closeuser)
    ." which already exists.  Pick a variation, or try another name...&lt;p>\n".generateLogin();  
}
#deny people the power of _ and ' ' at the beginning of usernames
if($name=~/^[_ ]/){
    return "Sorry ' ' and '_' are not allowed at the beginning of usernames.  Try again, do not pass go do not collect \$200&lt;P>".generateLogin();
}
if($name=~/[\[\]]/){
    return "Sorry &amp;#091; and &amp;#093; are not allowed in usernames.  Try again.&lt;P>".generateLogin();
}
   # First, insert the node so it exists in the database
   my $id = $NEWUSER->insert(-1);

   # Now fill out the fields with the info that we have
   $$NEWUSER{realname} = $realname;
   $$NEWUSER{email} = $email;
   $$NEWUSER{passwd} = $passwd;

   # And update it
   $NEWUSER->update(-1);
}
else
{ my $olduser = getNode($name, 'user');
   return "Sorry, " . linkNode($olduser) .
       " already exists.  Pick a variation, or try another name...&lt;p>\n"
.
       generateLogin();
}

$str.="Your new user account ("
  .linkNode($NEWUSER)
  .") has been created.  You ($email) should be getting an email soon
telling you your generated password.";

#send some email;
my ($n) = getNode('New User Mail', 'mail');
getRef $n;
$$n{doctext} =~ s/\&lt;name\>/$$NEWUSER{realname}/;
$$n{doctext} =~ s/\&lt;user\>/$$NEWUSER{title}/;
$$n{doctext} =~ s/\&lt;passwd\>/$$NEWUSER{passwd}/;
$$n{doctext} =~ s/\&lt;site_name\>/$HTMLVARS{site_name}/;
$$n{doctext} =~
s/\&lt;homenode\>/$HTMLVARS{site_url}index\.pl\?node=$$NEWUSER{title}\&amp;type=user/;
$$n{doctext} =~ s/\&lt;site_url\>/$HTMLVARS{site_url}/;
$$n{doctext} =~
s/\&lt;login\>/$HTMLVARS{site_url}index\.pl\?node_id=$HTMLVARS{login_node}/;



use Everything::MAIL;
node2mail($$NEWUSER{email},$n);

$str;


%]
[&lt;backsideErrors>]

</field>
  <field name="dynamicauthor_permission" type="literal_value">-1</field>
  <field name="dynamicgroup_permission" type="literal_value">-1</field>
  <field name="dynamicguest_permission" type="literal_value">-1</field>
  <field name="dynamicother_permission" type="literal_value">-1</field>
  <field name="group_usergroup" type="literal_value">-1</field>
  <field name="groupaccess" type="literal_value">iiiii</field>
  <field name="guestaccess" type="literal_value">iiiii</field>
  <field type_nodetype="location,nodetype" name="loc_location" type="noderef">superdoc</field>
  <field name="otheraccess" type="literal_value">iiiii</field>
  <field name="title" type="literal_value">Create a new user</field>
  <field type_nodetype="nodetype,nodetype" name="type_nodetype" type="noderef">superdoc</field>
</NODE>
