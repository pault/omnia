<NODE><INFO>rendered by Everything::XML.pm</INFO>
	<author_user table="node">-1</author_user>
	<authoraccess table="node">iiii</authoraccess>
	<code table="htmlcode">my @params = $query-&gt;param;
my $mini;
my $min;
my $user;
my $old;
my @nodelets;
my $SETTINGS;

foreach (@params) 
 {
   next unless /floyd/ ;
   $user = getNode($query-&gt;param($_), getType('user'));
 }  

foreach (@params) 
 { next unless /nodelet/;
   $old = $query-&gt;param($_);
   $mini = getNodeWhere({'nodelet_mini' =&gt; $query-&gt;param($_)}, getType('nodelet'));
   $min = getId($mini-&gt;[0]);
   $SETTINGS = getVars($user);  

   if ($$SETTINGS{nodelets})
    {
            @nodelets = split",",$$SETTINGS{nodelets}; 
    }

   else
     {
	my $NODELETGROUP = getNode($$SETTINGS{nodelet_group}) if exists $$SETTINGS{nodelet_group};

 	if ($NODELETGROUP and $$NODELETGROUP{type}{title} eq 'nodeletgroup')
 	 {        
		push @nodelets, @{ $$NODELETGROUP{group} } unless @nodelets;
	 }

	if (not @nodelets)
	 {  
		#push default nodelets on
		my $DEFAULT = $DB-&gt;getNode($HTMLVARS{default_nodeletgroup});
		@nodelets = @{ $$DEFAULT{group} }; 
	 }
}
	foreach (@nodelets)
	 { 
		next unless /$old/;
		 $_=$min;
	 }
  }
$$SETTINGS{nodelets}=join",",@nodelets ;

setVars($user,$SETTINGS);</code>
	<dynamicauthor_permission table="node">-1</dynamicauthor_permission>
	<dynamicgroup_permission table="node">-1</dynamicgroup_permission>
	<dynamicguest_permission table="node">-1</dynamicguest_permission>
	<dynamicother_permission table="node">-1</dynamicother_permission>
	<group_usergroup table="node">-1</group_usergroup>
	<groupaccess table="node">iiii-</groupaccess>
	<guestaccess table="node">iiii-</guestaccess>
	<loc_location table="node" type="location">opcode</loc_location>
	<otheraccess table="node">iiii-</otheraccess>
	<title table="node">insertMini</title>
	<type_nodetype table="node" type="nodetype">opcode</type_nodetype>
</NODE>