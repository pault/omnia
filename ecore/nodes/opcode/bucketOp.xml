<NODE export_version="0.5" nodetype="opcode" title="bucketOp">
  <field type="noderef" type_nodetype="user,nodetype" name="author_user">root</field>
  <field type="literal_value" name="authoraccess">iiii</field>
  <field type="literal_value" name="code">
if($query->param("bmove"))
{
  my $loc = getNode($query->param("node_id"));

  return unless($loc &amp;&amp; $loc->isOfType("location") &amp;&amp;
    $loc->hasAccess($USER, "x"));

  foreach my $param ($query->param)
  {
    next unless($param =~ /^bnode_(.*)$/);

    my $id = $1;
    my $node = getNode($id);
   
    next unless($node);

    $$node{loc_location} = $$loc{node_id};
    $node->update($USER);
  }
}
elsif($query->param("bsymlink"))
{
  my $loc = getNode($query->param("node_id"));
  my $sym = getType("symlink");
  return unless($loc &amp;&amp; $loc->isOfType("location") &amp;&amp;
    $loc->hasAccess($USER, "x") &amp;&amp; $sym->hasTypeAccess($USER, "c"));

  foreach my $param ($query->param)
  {
    next unless($param =~ /^bnode_(.*)$/);

    my $id = $1;
    my $node = getNode($id);
   
    next unless($node);

    my $symlink = getNode($$node{title}, "symlink", "create force");

    $$symlink{symlink_node} = $$node{node_id};
    $$symlink{loc_location} = $$loc{node_id};

    $symlink->insert($USER);
  }
}
elsif($query->param("bgroupadd"))
{
  my $group = getNode($query->param("node_id"));

  return unless($group &amp;&amp; $group->isGroup() &amp;&amp; $group->hasAccess($USER, "w"));

  foreach my $param ($query->param)
  {
    next unless($param =~ /^bnode_(.*)$/);

    # For some reason, passing $1 here causes the function to receive undef.
    # Probably has something to do with default vars.  So, we need to assign
    # what we found to a scoped var.
    my $insert = $1;
    $group->insertIntoGroup($USER, $insert);
	$group->update($USER);
  }
}

if($query->param("bdrop") or $query->param("dropexec"))
{
  my $bucket = $$VARS{nodebucket};
  foreach my $param ($query->param)
  {
    next unless($param =~ /^bnode_(.*)$/);

    # Remove the numeric id from the bucket list
    $bucket =~ s/$1,?//;
    $bucket =~ s/,$//;
  }

  $$VARS{nodebucket} = $bucket;
}</field>
  <field type="literal_value" name="dynamicauthor_permission">-1</field>
  <field type="literal_value" name="dynamicgroup_permission">-1</field>
  <field type="literal_value" name="dynamicguest_permission">-1</field>
  <field type="literal_value" name="dynamicother_permission">-1</field>
  <field type="literal_value" name="group_usergroup">-1</field>
  <field type="literal_value" name="groupaccess">iiii-</field>
  <field type="literal_value" name="guestaccess">iiii-</field>
  <field type="noderef" type_nodetype="location,nodetype" name="loc_location">opcode</field>
  <field type="literal_value" name="otheraccess">iiii-</field>
  <field type="literal_value" name="title">bucketOp</field>
  <field type="noderef" type_nodetype="nodetype,nodetype" name="type_nodetype">opcode</field>
</NODE>
