<NODE><INFO>rendered by Everything::XML.pm</INFO>
	<author_user table="node" type="user">root</author_user>
	<authoraccess table="node">iiii</authoraccess>
	<code table="htmlcode">no strict;
use Everything::XML;
my @modules = ('Everything', 'Everything::HTML', 'Everything::XML', 'Everything::NodeBase', 'Everything::NodeCache', 'Everything::Node::node', 'Everything::Node::nodeball','Everything::Node::nodegroup', 'Everything::Node::nodetype', 'Everything::Node::setting', 'Everything::Node::theme', 'Everything::Node::user', 'Everything::Node::nodetype');
my $str;
my $i;
if (not $query-&gt;param('choicefunc')) 
{
  my %funcs;
  my $rows = 0;
  $str .= "&lt;table border=0 cellpadding=1 cellspacing=2&gt;";

  my $colwidth = "100%";
  foreach my $modname (@modules) 
  {
    local *stash;
    *stash = *{ "${modname}::" };
    my @modfuncs;
    foreach(keys %stash) 
    {
       push (@modfuncs, $_) 
       if (defined &amp;{ $stash{$_} } 
        and ($modname eq 'Everything' or not exists $Everything::{$_})); 
    }
   @modfuncs = sort {$a cmp $b} @modfuncs;
   $funcs{$modname} = \@modfuncs;
   $rows = int(@modfuncs);
   $str.="&lt;TH width=$colwidth colspan = 5 bgcolor=black&gt;&lt;font color=white&gt;$modname&lt;/white&gt;&lt;/TH&gt;";
 
   my $count=0;
   while ($count &lt; $rows) 
   {
     $str.="&lt;TR&gt;";
     for ($i=1; $i&lt;=5; $i++)
     {
       $str.= "&lt;TD bgcolor=#cbcbcb&gt;"; 
       if (int (@{ $funcs{$modname} }) &gt; $count)
         { $str.=linkNode($NODE, $funcs{$modname}[$count], 
             { choicefunc =&gt; $funcs{$modname}[$count] });
         }
       else
         { $str.="&amp;nbsp;"; }
               
        
         $str.="&lt;/TD&gt;";
         $count++;
      }
     $str.="&lt;/TR&gt;\n"
   }
   $str.="&lt;tr&gt;&lt;td colspan=5&gt;&lt;/td&gt;&lt;/tr&gt;";
  }
	
  $str.="&lt;TH width=$colwidth colspan=5 bgcolor=black&gt;&lt;font color=white&gt;HTMLCODE&lt;/font&gt;&lt;/TH&gt;\n";
  my $HTMLCODE = getNodeWhere({}, getType('htmlcode'));
  $funcs{htmlcode}= $HTMLCODE;
  $rows=int(@$HTMLCODE);
 my $count=0;
   while ($count &lt; $rows) 
   {
     $str.="&lt;TR&gt;";
     for ($i=1; $i&lt;=5; $i++)
     {       
        $str.="&lt;TD bgcolor=#cbcbcb&gt;";
        $str.= linkNode($funcs{htmlcode}[$count]) if $count &lt; @{ $funcs{htmlcode} };
        $str.="&lt;/TD&gt;\n";
        $count++;
     }
    $str.="&lt;/tr&gt;\n";
    }  
  return $str.="&lt;/table&gt;";
}

#else...
$str.= "or go back to the code ".linkNode($NODE, 'index');
my $choicefunc = $query-&gt;param('choicefunc');
my $parentmod = "";
 if ($choicefunc =~ /^(.+?)\:\:(\w+)$/) {
  $choicefunc = $2;
  $parentmod = $1;

 }
foreach my $modname (@modules) {
    next if $parentmod;
    local *stash;
    *stash = *{ "${modname}::" };
    if (exists $stash{$choicefunc}) {
        $parentmod=$modname;
    }
}

unless ($parentmod) {
   return "&lt;i&gt;sorry, man.  No dice on $choicefunc&lt;/i&gt;&lt;br&gt;\n"; 
}

my $parentfile = "/usr/lib/perl5/site_perl/5.005/" . $parentmod.".pm";
$parentfile =~ s/\:\:/\//g;

open MODULE, $parentfile or die;
my @mod = &lt;MODULE&gt;;
close MODULE;

if (@mod) {
  #$str.= "module $parentmod loaded: ".int(@mod)." lines\n";
} else {
  $str.= "hmm. couldn't load modules $parentfile\n";
}

my $count = 0;
my @lines;
while (@mod &gt; $count and not @lines) {
    if ($mod[$count] =~ /^sub $choicefunc\s*/) {
        my $i = $count;
        my $flag = "";
        do {
            $i--;
            $mod[$i]=~/\s*(\S)/;
            if (not defined $1 or $1 eq "#") {
                $flag = "yes!";
            } else {
                $flag="";
            }
        } while ($i &gt; 0 and $flag);

        do {
            $i++;
            push @lines, $mod[$i];
        } while (not ($mod[$i] =~ /^\}\s*$/ ));

    }
    $count++;
}

if (@lines) {
  $str.= listCode(join ("", @lines));
} else {
  $str.= "\n&lt;br&gt;no comment found\n";
}
$str;
</code>
	<dynamicauthor_permission table="node">-1</dynamicauthor_permission>
	<dynamicgroup_permission table="node">-1</dynamicgroup_permission>
	<dynamicguest_permission table="node">-1</dynamicguest_permission>
	<dynamicother_permssion table="node">-1</dynamicother_permssion>
	<group_usergroup table="node">-1</group_usergroup>
	<groupaccess table="node">iiii-</groupaccess>
	<guestaccess table="node">iiii-</guestaccess>
	<loc_location table="node" type="location">htmlcode</loc_location>
	<otheraccess table="node">iiii-</otheraccess>
	<title table="node">showChoiceFunc</title>
	<type_nodetype table="node" type="nodetype">htmlcode</type_nodetype>
</NODE>