<NODE export_version="0.5" nodetype="htmlcode" title="showfunc">
  <field type="noderef" type_nodetype="user,nodetype" name="author_user">root</field>
  <field type="literal_value" name="authoraccess">iiii</field>
  <field type="literal_value" name="code">my ($choicefunc) = @_;

local *getModules = sub{
    my ($this) = @_;
    my @modules;

    my %dontdisplay = ("XMLold" => 1);
    use DirHandle;

    foreach my $lib (@INC) {
        if (-d "$lib/Everything") {
            my $dh = DirHandle->new("$lib/Everything")
                or die "I cannot access $lib/Everything!";

            foreach my $module ($dh->read) {
                next unless -f "$lib/Everything/$module";
                next unless $module =~ s/\.pm$//;
                next if exists $dontdisplay{$module};

                push @modules, "Everything\:\:$module";
            }
        }
    }
    push @modules, keys(%{ $DB->{nodetypeModules} });
    #push @modules, "Everything";
    @modules;
};



my $parentmod = "";
 if ($choicefunc =~ /^(.+?)\:\:(\w+)$/) {
  $choicefunc = $2;
  $parentmod = $1;

}
my $str;

#return "$choicefunc -- $parentmod";

no strict;
if (not $parentmod) {
  my @modules = split ' ', getModules();
  foreach my $modname (reverse @modules) {
    local *stash;
    *stash = *{ "${modname}::" };
    if (defined &amp;{ $stash{$choicefunc}}) {
        $parentmod=$modname;
    }
  }
}
use strict;
unless ($parentmod) {
   return "&lt;i>Cannot find $choicefunc.  Please specify a parent module.&lt;/i>&lt;br>\n"; 
}
my $parentfile;
foreach my $lib (@INC) {
  if (-d "$lib/Everything") {
   $parentfile = "$lib/$parentmod\.pm";
  }
}

$parentfile or return "cannot find Everything modules in \@INC!";
$parentfile =~ s/\:\:/\//g;

use FileHandle;
my $fh = new FileHandle;
$fh->open ($parentfile) or die "can't find $parentfile";
my @mod = &lt;$fh>;
$fh->close();

if (@mod) {
  #$str.= "module $parentmod loaded: ".int(@mod)." lines\n";
} else {
  return "hmm. couldn't load module $parentfile\n";
}

my $count = 0;
my @lines;
while (@mod > $count and not @lines) {
    if ($mod[$count] =~ /^\s*sub\s+$choicefunc\s+/) {
        my $i = $count;
        my $flag = "";
        do {
            $i--;
            $mod[$i]=~/\s*(\S)/;
            if (not defined $1 or $1 eq "#") {
                $flag = "yes!";
            } else {
                $flag="";
            }
        } while ($i > 0 and $flag);

        do {
            $i++;
            push @lines, $mod[$i];
        } while (not ($mod[$i] =~ /^\}\s*$/ ));

    }
    $count++;
}



if (@lines) {
  my $code = listCode(join ("", @lines));
  $str.=linkFunctions($code);
} else {
  $str.= "\n&lt;br>no function $choicefunc found in $parentmod\n";
}
$str;
</field>
  <field type="literal_value" name="dynamicauthor_permission">-1</field>
  <field type="literal_value" name="dynamicgroup_permission">-1</field>
  <field type="literal_value" name="dynamicguest_permission">-1</field>
  <field type="literal_value" name="dynamicother_permission">-1</field>
  <field type="literal_value" name="group_usergroup">-1</field>
  <field type="literal_value" name="groupaccess">iiiii</field>
  <field type="literal_value" name="guestaccess">iiiii</field>
  <field type="literal_value" name="loc_location">0</field>
  <field type="literal_value" name="otheraccess">iiiii</field>
  <field type="literal_value" name="title">showfunc</field>
  <field type="noderef" type_nodetype="nodetype,nodetype" name="type_nodetype">htmlcode</field>
</NODE>
