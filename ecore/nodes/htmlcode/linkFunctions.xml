<NODE export_version="0.5" nodetype="htmlcode" title="linkFunctions">
  <field type="noderef" type_nodetype="user,nodetype" name="author_user">root</field>
  <field type="literal_value" name="authoraccess">iiii</field>
  <field type="literal_value" name="code">my ($code) = @_; #note that this takes text, not just a fieldname
return $code if $HTMLVARS{no_linkFunctions};
local *getModules = sub{
    my ($this) = @_;
    my @modules;

    my %dontdisplay = ("XMLold" => 1);
    use DirHandle;

    foreach my $lib (@INC) {
        if (-d "$lib/Everything") {
            my $dh = DirHandle->new("$lib/Everything")
                or die "I cannot access $lib/Everything!";

            foreach my $module ($dh->read) {
                next unless -f "$lib/Everything/$module";
                next unless $module =~ s/\.pm$//;
                next if exists $dontdisplay{$module};

                push @modules, "Everything\:\:$module";
            }
        }
    }
    push @modules, keys(%{ $DB->{nodetypeModules} });
    #push @modules, "Everything";
    @modules;
};

my $GCL = getNode('gigantic code lister', 'restricted_superdoc');
local *getModuleFunctions = sub {
    my ($modname) = @_;

    no strict;
    local *stash;
    *stash = *{ "${modname}::" };
    unless (keys %stash) {
        #we haven't loaded the module.  Make it so.
        eval "use $modname";
        *stash = *{ "${modname}::" };
    }
    return \%stash;
};


local *buildSuperStash = sub {
  my @modules = getModules();
  my %superstash;
  foreach (reverse @modules) {
    my $sref = getModuleFunctions($_);
    @superstash{keys(%$sref)} = values(%$sref);
  }

  #now include all HTMLCODE functions
  my $csr = $DB->sqlSelectMany("node_id, title", 'node', "type_nodetype=".getType('htmlcode')->getId);
  while (my ($id, $title) = $csr->fetchrow) {
    $superstash{$title} = $id;
  }


  \%superstash;
};

local *existsInNodebase =sub {
  my ($function) = @_;
  no strict;
  use Devel::Peek "CvGV";
  local *basestash;
  my $modname = "Everything::NodeBase";
  *basestash = *{  "${modname}::" };
  return 0 unless defined &amp;{ $basestash{$function} };
  my $glob = CvGV(\&amp;{ $basestash{$function} });
  return 1 if $glob eq "*Everything::NodeBase::$function";
  0;
};


my $str;
my $funcs = buildSuperStash();
my @tokens = split /(\W+)/, $code;
use Devel::Peek "CvGV";
my $lastone;
  foreach my $t (@tokens) {
    next if length($t) &lt; 3;
    $lastone = $t, next if $lastone =~ /[\$\%\@]$/;
    next if $t eq 'new';
    if (exists $$funcs{$t} and defined &amp;{ $$funcs{$t} }) {
       
       my $glob = CvGV(\&amp;{ $$funcs{$t} });
       if ($glob =~ /^*Everything/
           and not $glob =~ /\_\_ANON\_\_/ ) {
         $glob =~ s/^\*//;
         if ($glob =~ /^Everything\:\:$t$/) {
           $glob = "Everything::NodeBase::$t" if existsInNodebase($t);
         }
         $t = linkNode($GCL, $t, { choicefunc => $glob});
       }
    } elsif (exists $$funcs{$t} and $$funcs{$t} =~ /\d+/) {
      $t = linkNode($$funcs{$t}, $t);
    }
    $lastone = $t;
  }

  $str.= join "", @tokens;

$str;</field>
  <field type="literal_value" name="dynamicauthor_permission">-1</field>
  <field type="literal_value" name="dynamicgroup_permission">-1</field>
  <field type="literal_value" name="dynamicguest_permission">-1</field>
  <field type="literal_value" name="dynamicother_permission">-1</field>
  <field type="literal_value" name="group_usergroup">-1</field>
  <field type="literal_value" name="groupaccess">iiiii</field>
  <field type="literal_value" name="guestaccess">iiiii</field>
  <field type="literal_value" name="loc_location">0</field>
  <field type="literal_value" name="otheraccess">iiiii</field>
  <field type="literal_value" name="title">linkFunctions</field>
  <field type="noderef" type_nodetype="nodetype,nodetype" name="type_nodetype">htmlcode</field>
</NODE>
