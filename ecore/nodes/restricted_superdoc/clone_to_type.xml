<NODE export_version="0.5" nodetype="restricted_superdoc" title="clone to type">
  <field name="author_user" type="noderef" type_nodetype="user,nodetype">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="doctext" type="literal_value">[%
my $str;
my $src_id = $query->param("srcnode_id");
my $newtype = $query->param("newtype");
my $newname = $query->param("newname");
my $CLONE;
my $SRCNODE = getNode($src_id);
if(defined $newname)
{
  return "No node to clone!" unless($SRCNODE);
  return "No name provided!" unless($newname);

  my $NEWTYPE = getType($newtype);
  if($$NEWTYPE{node_id} != $$SRCNODE{type}{node_id})
   {
    # We want to clone this node as a different type
    my $NEWNODE = getNode($newname, $NEWTYPE, "create force");
    $str.= "New node of type $$NEWTYPE{title}";
    # Insert this node into the database.  Doing so will fill out the
    # fields with the default values.
    $NEWNODE->insert($USER);

    # This gets a hashref of the node that contains only the keys that
    # exist in the database (similar to what you were doing with the
    # getNodetypeTables() and getFields()).
    my $nodeKeys = $NEWNODE->getNodeKeys();

    foreach my $key (keys %$nodeKeys)
     {
      # Don't overwrite the id and title
      next if($key =~ /_id$/);
      next if($key =~ /^title$/);
      next if($key =~/^type/);

      # This copies over the fields that are common between the two
      # nodetypes.
      $$NEWNODE{$key} = $$SRCNODE{$key} if(exists $$SRCNODE{$key});
     }

    $NEWNODE->update($USER);

    $CLONE = $NEWNODE;
   }
  else
   {
    # Just make an exact clone of this node
    $CLONE = $SRCNODE->clone($USER, $newname);
   }

  $CLONE;  # CLONE is the cloned node. 
  return "Cloned node at: ".linkNode($CLONE)."&lt;BR>$str";
}
else
{
  # Then you have some HTML form stuff...
  $str.="Cloning node ".linkNode($SRCNODE)." of type: ".linkNode($$SRCNODE{type})."&lt;BR>";
     $str.=htmlcode('openform');
     $str.="&lt;INPUT TYPE=\"hidden\" name=\"srcnode_id\" value=\"$src_id\">";
     $str.="To node with:&lt;BR>";
     $str.="Title: ".$query->textfield('newname',$$SRCNODE{title},50,240)."&lt;BR>";


     my @idlist;
     my %items;
     my $id;
     my @allTypes = $DB->getAllTypes();
     foreach my $N (@allTypes)
      {
       $id = getId $N;
       $items{$id} = $$N{title};
      }

     foreach $id (keys %items)
      {
       push @idlist, $id;
      }

     @idlist=sort{lc($items{$a}) cmp lc($items{$b})} @idlist;
     $str.="and type of ".$query->popup_menu("newtype", \@idlist, "", \%items)."&lt;BR>";
     $str.=$query->checkbox('deleteorig',"","on","Delete original node:");
     $str.=htmlcode('closeform');
} 
%]</field>
  <field name="dynamicauthor_permission" type="literal_value">-1</field>
  <field name="dynamicgroup_permission" type="literal_value">-1</field>
  <field name="dynamicguest_permission" type="literal_value">-1</field>
  <field name="dynamicother_permission" type="literal_value">-1</field>
  <field name="group_usergroup" type="literal_value">-1</field>
  <field name="groupaccess" type="literal_value">iiiii</field>
  <field name="guestaccess" type="literal_value">iiiii</field>
  <field name="loc_location" type="noderef" type_nodetype="location,nodetype">restricted_superdoc</field>
  <field name="otheraccess" type="literal_value">iiiii</field>
  <field name="title" type="literal_value">clone to type</field>
  <field name="type_nodetype" type="noderef" type_nodetype="nodetype,nodetype">restricted_superdoc</field>
</NODE>
