<NODE export_version="0.5" nodetype="restricted_superdoc" title="typeversion controls">
  <field name="author_user" type="noderef" type_nodetype="user,nodetype">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="doctext" type="literal_value">&lt;p&gt;If nodes of a nodetype aren't
updated often, you can save some database resources by only checking
if any nodes of that type have changed instead of checking each node.  
&lt;/p&gt;&lt;p&gt;Good nodetypes to turn typeversion on: [nodetype], [htmlpage], [nodemethod], [htmlcode], [container]
or anything else which is rarely updated, but frequently read.&lt;/p&gt;
&lt;p&gt;Nodetypes which should &lt;b&gt;NOT&lt;/b&gt; have typeversion on: [user], [document] or any nodetypes
which are frequently updated.

&lt;/p&gt;

[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


    my $nodetypes = getNodeWhere({type_nodetype =&gt; 1 }, &quot;nodetype&quot;, &quot;title&quot;);
    my $str;
    my %TVERSIONS;
    my %NEWVERSIONS;
    $str .= $query-&gt;start_form(&quot;POST&quot;, $query-&gt;script_name) .
'&lt;fieldset&gt;'.
'&lt;input type=&quot;hidden&quot; name=&quot;confirmpage&quot; value=&quot;1&quot; /&gt;'.
$query-&gt;hidden(&quot;displaytype&quot;) .
$query-&gt;hidden(&quot;node_id&quot;, $NODE-&gt;get_node_id);
$str .= '&lt;/fieldset&gt;';
    if (my $csr = $DB-&gt;sqlSelectMany(&quot;*&quot;,'typeversion')) {
        while (my $N = $csr-&gt;fetchrow_hashref) { $TVERSIONS{$$N{typeversion_id}} = 1 }
        $csr-&gt;finish;
    }
if (defined $query-&gt;param('confirmpage')) {
    foreach ($query-&gt;param) {
        next unless /^typeify_(\d+)$/;
        my $n_id = $1;
        $NEWVERSIONS{$n_id} = 1;
        if (not $TVERSIONS{$n_id}) {
            $DB-&gt;sqlInsert(&quot;typeversion&quot;, { typeversion_id=&gt; $n_id, version =&gt; 1 });
        }
    }

    foreach (keys %TVERSIONS) {
        $DB-&gt;sqlDelete(&quot;typeversion&quot;, &quot;typeversion_id=$_&quot;) unless exists $NEWVERSIONS{$_};
    }
} else { %NEWVERSIONS = %TVERSIONS }

# Split them into three columns
my @list;

foreach (@$nodetypes)
{
    #nodemethods must be typeversioned (because of the methodCache)
    next if ($$_{title} eq 'nodemethod');
    $str .= $query-&gt;p( $query-&gt;checkbox('typeify_'.getId($_),
       exists($NEWVERSIONS{$DB-&gt;getId($_)}), 1, $$_{title}) );

    push @list, $str;
}

$this-&gt;formatCols(\@list, 3);

$str .= $query-&gt;p( $query-&gt;submit );

$str .=$query-&gt;end_form;
%]</field>
  <field name="groupaccess" type="literal_value">iiiii</field>
  <field name="guestaccess" type="literal_value">iiiii</field>
  <field name="loc_location" type="noderef" type_nodetype="location,nodetype">restricted_superdoc</field>
  <field name="otheraccess" type="literal_value">iiiii</field>
  <field name="title" type="literal_value">typeversion controls</field>
  <field name="type_nodetype" type="noderef" type_nodetype="nodetype,nodetype">restricted_superdoc</field>
</NODE>
