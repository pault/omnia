<NODE><INFO>rendered by Everything::XML.pm</INFO>
	<author_user table="node" type="user">root</author_user>
	<authoraccess table="node">iiii</authoraccess>
	<doctext table="document">[%
my $src_id = $query-&gt;param("srcnode_id");
my $newname = $query-&gt;param("newname");

my $str;

if((defined $src_id) &amp;&amp; (defined $newname))
{
  my $SRCNODE = getNodeById($src_id);
  my $CLONE = $SRCNODE-&gt;clone($USER, $newname);

  if($CLONE)
  {
    $str = "&lt;h3&gt;&lt;font color=#00cc00&gt;Clone successful&lt;/font&gt;&lt;/h3&gt;\n"; 
    $str .= "&lt;p&gt;Node " . linkNode($SRCNODE) .
      " has been cloned as " . linkNode($CLONE);
  }
  else
  {
     my $EXISTS = getNode($newname, $$SRCNODE{type});

     if($EXISTS)
     {
       $str .= linkNode($EXISTS) . " already exists and nodes of this type";
       $str .= " does not allow duplicate names.";
     }
     else
     {
       $str .= "&lt;font color=red&gt;Error Cloning!&lt;/font&gt;";
       $str .= "This could be caused by not having permissions to create a ";
       $str .= "node of that type, or there was an internal error.";
     }
  }
}
else
{
  $str = "No node to clone!\n";
}

$str;
%]</doctext>
	<dynamicauthor_permission table="node">-1</dynamicauthor_permission>
	<dynamicgroup_permission table="node">-1</dynamicgroup_permission>
	<dynamicguest_permission table="node">-1</dynamicguest_permission>
	<dynamicother_permssion table="node">-1</dynamicother_permssion>
	<group_usergroup table="node">-1</group_usergroup>
	<groupaccess table="node">iiii-</groupaccess>
	<guestaccess table="node">iiii-</guestaccess>
	<loc_location table="node" type="location">restricted_superdoc</loc_location>
	<otheraccess table="node">iiii-</otheraccess>
	<title table="node">Node Cloner</title>
	<type_nodetype table="node" type="nodetype">restricted_superdoc</type_nodetype>
</NODE>