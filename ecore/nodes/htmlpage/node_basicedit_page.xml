<NODE export_version="0.5" nodetype="htmlpage" title="node basicedit page">
  <field name="MIMEtype" type="literal_value">text/html</field>
  <field name="author_user" type="noderef" type_nodetype="user,nodetype">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="displaytype" type="literal_value">basicedit</field>
  <field name="dynamicauthor_permission" type="literal_value">-1</field>
  <field name="dynamicgroup_permission" type="literal_value">-1</field>
  <field name="dynamicguest_permission" type="literal_value">-1</field>
  <field name="dynamicother_permission" type="literal_value">-1</field>
  <field name="group_usergroup" type="literal_value">-1</field>
  <field name="groupaccess" type="literal_value">iiii-</field>
  <field name="guestaccess" type="literal_value">iiii-</field>
  <field name="loc_location" type="noderef" type_nodetype="location,nodetype">htmlpage</field>
  <field name="otheraccess" type="literal_value">iiii-</field>
  <field name="ownedby_theme" type="literal_value">0</field>
  <field name="page" type="literal_value">[{openform}]

[%
# This edit page displays each field of a node with a
# (usually) appropriate form item in which to edit the
# contents of each field.  This is useful to edit a node's
# data that is usually not accessable through a standard
# edit page (like createtime, or hits)

return "" unless($NODE->hasAccess($USER, 'w'));

# This code does the update, if we have one.
my $param;
my @params = $query->param;

foreach $param (@params)
{
  if ($param =~ /^update_(\w*)$/)
  {
    $$NODE{$1} = $query->param($param);
  }
}

$NODE->update($USER);

return "";
%]

[%
# This code generates the form fields and the stuff that
# the user sees.
return "" unless($NODE->hasAccess($USER, 'w'));
my $tables = $$NODE{type}->getTableArray(1);
my @fields;
my $table;
my $field;
my %titletype;
my $str = "";

foreach $table (@$tables)
{
  @fields = $DB->getFieldsHash($table);

  foreach $field (@fields)
  {
    $titletype{$$field{Field}} = $$field{Type};
  }
}

foreach $field (keys %titletype)
{
  $str .= "$field ($titletype{$field}): ";

  if($titletype{$field} =~ /int/)
  {
    $str .= $query->textfield( -name => "update_$field",
      -default => $$NODE{$field}, -size => 15,
      -maxlength => 15) . "&lt;br>\n";
  }
  elsif($titletype{$field} =~ /char\((.*)\)/)
  {
    my $size = 80;

    $size = $1 if($size > $1);
    $str .= $query->textfield( -name => "update_$field",
      -default => $$NODE{$field}, -size => $size,
      -maxlength => $1 ) . "&lt;br>\n";
  }
  elsif($titletype{$field} =~ /text/)
  {
    $str .= $query->textarea( "update_$field",
      $$NODE{$field}, 20, 80) . "&lt;br>\n";
  }
  elsif($titletype{$field} =~ /datetime/)
  {
    $str .= $query->textfield( -name => "update_$field",
      -default => $$NODE{$field}, -size => 19,
      -maxlength => 19 ) . "&lt;br>\n";
  }
  else
  {
    # This is for the unknown field types.
    $str .= $query->textfield( -name => "update_$field",
      -default => $$NODE{$field}, -size => 80,
      -maxlength => 256) . "&lt;br>\n";
  }
}

$str;
%]

[{closeform}]</field>
  <field name="pagetype_nodetype" type="noderef" type_nodetype="nodetype,nodetype">node</field>
  <field name="parent_container" type="noderef" type_nodetype="container,nodetype">main container</field>
  <field name="permissionneeded" type="literal_value">w</field>
  <field name="title" type="literal_value">node basicedit page</field>
  <field name="type_nodetype" type="noderef" type_nodetype="nodetype,nodetype">htmlpage</field>
</NODE>
