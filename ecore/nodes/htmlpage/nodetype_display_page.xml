<NODE export_version="0.5" nodetype="htmlpage" title="nodetype display page">
  <field name="MIMEtype" type="literal_value">text/html</field>
  <field name="author_user" type="noderef" type_nodetype="user,nodetype">root</field>
  <field name="authoraccess" type="literal_value">iiii</field>
  <field name="displaytype" type="literal_value">display</field>
  <field name="dynamicauthor_permission" type="literal_value">-1</field>
  <field name="dynamicgroup_permission" type="literal_value">-1</field>
  <field name="dynamicguest_permission" type="literal_value">-1</field>
  <field name="dynamicother_permission" type="literal_value">-1</field>
  <field name="group_usergroup" type="literal_value">-1</field>
  <field name="groupaccess" type="literal_value">iiii-</field>
  <field name="guestaccess" type="literal_value">iiii-</field>
  <field name="loc_location" type="noderef" type_nodetype="location,nodetype">htmlpage</field>
  <field name="otheraccess" type="literal_value">iiii-</field>
  <field name="ownedby_theme" type="literal_value">0</field>
  <field name="page" type="literal_value">&lt;p&gt;&lt;b&gt;Default permissions for nodes of this type:&lt;/b&gt;&lt;br&gt;
&lt;table cellspacing=1 cellpadding=3&gt;
 &lt;tr&gt;
  &lt;td bgcolor=#cccccc&gt;&lt;b&gt;Class&lt;/b&gt;&lt;/td&gt;
  &lt;td bgcolor=#cccccc&gt;&lt;b&gt;Permissions&lt;/b&gt;&lt;/td&gt;
  &lt;td bgcolor=#cccccc&gt;&lt;b&gt;Inherited values&lt;/b&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td bgcolor=#cccccc&gt;Author:&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

$$NODE{defaultauthoraccess}
%]&lt;/code&gt;&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $TYPE = getType($$NODE{extends_nodetype});
return $$TYPE{derived_defaultauthoraccess} if($TYPE);
&quot;&quot;;

%]&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td bgcolor=#cccccc&gt;Group: [%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $str;
if($$NODE{defaultgroup_usergroup} &gt; 0)
{ 
  $str = linkNode($$NODE{defaultgroup_usergroup});
}
else
{
  $str = &quot;No group&quot;;
}

$str;

%]&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

$$NODE{defaultgroupaccess}
%]&lt;/code&gt;&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $TYPE = getType($$NODE{extends_nodetype});
return $$TYPE{derived_defaultgroupaccess} if($TYPE);
&quot;&quot;;

%]&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td bgcolor=#cccccc&gt;Other:&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

$$NODE{defaultotheraccess}
%]&lt;/code&gt;&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $TYPE = getType($$NODE{extends_nodetype});
return $$TYPE{derived_defaultotheraccess} if($TYPE);
&quot;&quot;;

%]&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td bgcolor=#cccccc&gt;Guest:&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

$$NODE{defaultguestaccess}
%]&lt;/code&gt;&lt;/td&gt;
  &lt;td bgcolor=#999999&gt;&lt;code&gt;[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $TYPE = getType($$NODE{extends_nodetype});
return $$TYPE{defaultguestaccess} if($TYPE);
&quot;&quot;;

%]&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;

[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


if($NODE-&gt;isGroup())
{ 
  return &quot;&lt;p&gt;&lt;b&gt;Restricted Nodetypes&lt;/b&gt;: &quot;;
}

%]

&lt;p&gt;&lt;b&gt;Restrict Duplicates&lt;/b&gt; (identical titles): 
	[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

 if($$NODE{restrictdupes} == -1) { &quot;parent&quot;; }
	   else{ $$NODE{restrictdupes}?&quot;Yes&quot;:&quot;No&quot;;} 
%]

&lt;p&gt; &lt;b&gt;Sql Tables&lt;/b&gt;: 


[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $tables = $DB-&gt;getNodetypeTables($NODE);
my $str;
foreach (@$tables) {
   my $TABLE = getNode($_, 'dbtable');
   $str.=&quot;&lt;li&gt;&quot;.linkNode($TABLE);
}
return  &quot;&lt;i&gt;none&lt;/i&gt;&quot; unless @$tables;
$str;

%] 
&lt;p&gt; &lt;b&gt;Extends Nodetype:&lt;/b&gt; 
[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;

 linkNode ($$NODE{extends_nodetype}) 
	if ($$NODE{extends_nodetype});
%]


&lt;p&gt; &lt;b&gt;Maximum Revisions for undo:&lt;/b&gt; 
[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


  if ($$NODE{maxrevisions}) {
    if ($$NODE{maxrevisions} == -1) {
      return &quot;$$NODE{derived_maxrevisions} (inherited)&quot;;
    } else {
      return $$NODE{maxrevisions};
    }

  } else {
   return &quot;&lt;i&gt;undo disabled&lt;/i&gt;&quot;;
  }


%]
&lt;p&gt;  &lt;b&gt;Can be changed in a workspace:&lt;/b&gt;
[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


  if ($$NODE{canworkspace}) {
    if ($$NODE{canworkspace} == -1) {
       return ($$NODE{derived_canworkspace}?&quot;enabled&quot;:&quot;disabled&quot;).&quot; (inherited)&quot;;
    } else {
       return &quot;enabled&quot;;
    }
  } else {
    return &quot;&lt;i&gt;disabled&lt;/i&gt;&quot;;
  }

%]
&lt;p&gt; &lt;b&gt;Relevant pages:&lt;/b&gt;&lt;br&gt;

[%
my $NODE = $this-&gt;get_node;
my $USER = $this-&gt;get_user;
my $query = $this-&gt;get_query;
my $THEME = $this-&gt;get_theme;
my %HTMLVARS = %{ $this-&gt;get_htmlvars };
my $VARS = $this-&gt;get_vars;
my $DB = $this-&gt;get_nodebase;
my %GLOBAL;


my $str;
my $pages = getNodeWhere(
  { pagetype_nodetype =&gt; $$NODE{node_id} }, getType('htmlpage'));

return &quot;None&quot; unless($pages);

foreach (@$pages)
{
  $str .= &quot;&lt;li&gt;&quot; .linkNode ($_);
}
$str;

%]
&lt;br&gt;&lt;br&gt;
[&lt;availableMethods&gt;]</field>
  <field name="pagetype_nodetype" type="noderef" type_nodetype="nodetype,nodetype">nodetype</field>
  <field name="parent_container" type="noderef" type_nodetype="container,nodetype">general container</field>
  <field name="permissionneeded" type="literal_value">r</field>
  <field name="title" type="literal_value">nodetype display page</field>
  <field name="type_nodetype" type="noderef" type_nodetype="nodetype,nodetype">htmlpage</field>
</NODE>
